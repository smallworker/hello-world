<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.test.dao.cadDevices.BuildingCadDevicesMapper" >
  <resultMap id="BaseResultMap" type="cn.test.entity.cadDevices.BuildingCadDevices" >
    <id column="BcdId" property="bcdid" jdbcType="BIGINT" />
    <result column="DeviceId" property="deviceid" jdbcType="BIGINT" />
    <result column="Fid" property="fid" jdbcType="INTEGER" />
    <result column="LeftPoint" property="leftpoint" jdbcType="VARCHAR" />
    <result column="TopPoint" property="toppoint" jdbcType="VARCHAR" />
    <result column="NvrChannel" property="nvrchannel" jdbcType="VARCHAR" />
    <result column="DeviceType" property="devicetype" jdbcType="INTEGER" />
    <result column="ClientId" property="clientid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BcdId, DeviceId, Fid, LeftPoint, TopPoint, NvrChannel, DeviceType, ClientId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.test.entity.cadDevices.BuildingCadDevicesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kq_building_cad_devices
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start != null and start >=0" >
      limit${start} , ${end}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.test.entity.cadDevices.BuildingCadDevicesKey" >
    select 
    <include refid="Base_Column_List" />
    from kq_building_cad_devices
    where BcdId = #{bcdid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.test.entity.cadDevices.BuildingCadDevicesKey" >
    delete from kq_building_cad_devices
    where BcdId = #{bcdid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.test.entity.cadDevices.BuildingCadDevicesExample" >
    delete from kq_building_cad_devices
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.test.entity.cadDevices.BuildingCadDevices" >
    <selectKey resultType="java.lang.Long" keyProperty="bcdid" order="AFTER" >
      select @@identity
    </selectKey>
    insert into kq_building_cad_devices (DeviceId, Fid, LeftPoint, 
      TopPoint, NvrChannel, DeviceType, 
      ClientId)
    values (#{deviceid,jdbcType=BIGINT}, #{fid,jdbcType=INTEGER}, #{leftpoint,jdbcType=VARCHAR}, 
      #{toppoint,jdbcType=VARCHAR}, #{nvrchannel,jdbcType=VARCHAR}, #{devicetype,jdbcType=INTEGER}, 
      #{clientid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.test.entity.cadDevices.BuildingCadDevices" >
    <selectKey resultType="java.lang.Long" keyProperty="bcdid" order="AFTER" >
      select @@identity
    </selectKey>
    insert into kq_building_cad_devices
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deviceid != null" >
        DeviceId,
      </if>
      <if test="fid != null" >
        Fid,
      </if>
      <if test="leftpoint != null" >
        LeftPoint,
      </if>
      <if test="toppoint != null" >
        TopPoint,
      </if>
      <if test="nvrchannel != null" >
        NvrChannel,
      </if>
      <if test="devicetype != null" >
        DeviceType,
      </if>
      <if test="clientid != null" >
        ClientId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deviceid != null" >
        #{deviceid,jdbcType=BIGINT},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="leftpoint != null" >
        #{leftpoint,jdbcType=VARCHAR},
      </if>
      <if test="toppoint != null" >
        #{toppoint,jdbcType=VARCHAR},
      </if>
      <if test="nvrchannel != null" >
        #{nvrchannel,jdbcType=VARCHAR},
      </if>
      <if test="devicetype != null" >
        #{devicetype,jdbcType=INTEGER},
      </if>
      <if test="clientid != null" >
        #{clientid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.test.entity.cadDevices.BuildingCadDevicesExample" resultType="java.lang.Integer" >
    select count(*) from kq_building_cad_devices
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update kq_building_cad_devices
    <set >
      <if test="record.bcdid != null" >
        BcdId = #{record.bcdid,jdbcType=BIGINT},
      </if>
      <if test="record.deviceid != null" >
        DeviceId = #{record.deviceid,jdbcType=BIGINT},
      </if>
      <if test="record.fid != null" >
        Fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.leftpoint != null" >
        LeftPoint = #{record.leftpoint,jdbcType=VARCHAR},
      </if>
      <if test="record.toppoint != null" >
        TopPoint = #{record.toppoint,jdbcType=VARCHAR},
      </if>
      <if test="record.nvrchannel != null" >
        NvrChannel = #{record.nvrchannel,jdbcType=VARCHAR},
      </if>
      <if test="record.devicetype != null" >
        DeviceType = #{record.devicetype,jdbcType=INTEGER},
      </if>
      <if test="record.clientid != null" >
        ClientId = #{record.clientid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update kq_building_cad_devices
    set BcdId = #{record.bcdid,jdbcType=BIGINT},
      DeviceId = #{record.deviceid,jdbcType=BIGINT},
      Fid = #{record.fid,jdbcType=INTEGER},
      LeftPoint = #{record.leftpoint,jdbcType=VARCHAR},
      TopPoint = #{record.toppoint,jdbcType=VARCHAR},
      NvrChannel = #{record.nvrchannel,jdbcType=VARCHAR},
      DeviceType = #{record.devicetype,jdbcType=INTEGER},
      ClientId = #{record.clientid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.test.entity.cadDevices.BuildingCadDevices" >
    update kq_building_cad_devices
    <set >
      <if test="deviceid != null" >
        DeviceId = #{deviceid,jdbcType=BIGINT},
      </if>
      <if test="fid != null" >
        Fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="leftpoint != null" >
        LeftPoint = #{leftpoint,jdbcType=VARCHAR},
      </if>
      <if test="toppoint != null" >
        TopPoint = #{toppoint,jdbcType=VARCHAR},
      </if>
      <if test="nvrchannel != null" >
        NvrChannel = #{nvrchannel,jdbcType=VARCHAR},
      </if>
      <if test="devicetype != null" >
        DeviceType = #{devicetype,jdbcType=INTEGER},
      </if>
      <if test="clientid != null" >
        ClientId = #{clientid,jdbcType=INTEGER},
      </if>
    </set>
    where BcdId = #{bcdid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.test.entity.cadDevices.BuildingCadDevices" >
    update kq_building_cad_devices
    set DeviceId = #{deviceid,jdbcType=BIGINT},
      Fid = #{fid,jdbcType=INTEGER},
      LeftPoint = #{leftpoint,jdbcType=VARCHAR},
      TopPoint = #{toppoint,jdbcType=VARCHAR},
      NvrChannel = #{nvrchannel,jdbcType=VARCHAR},
      DeviceType = #{devicetype,jdbcType=INTEGER},
      ClientId = #{clientid,jdbcType=INTEGER}
    where BcdId = #{bcdid,jdbcType=BIGINT}
  </update>
</mapper>